openapi: 3.0.0
info:
  title: iOT ChirpStack
  description: >-
    OpenApi3 iOT ChirpStack Server, user data management and interaction API and
    integrated device humidity and temperature sensor.
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: devext3@gantabi.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
servers:
  - url: 'https://localhost:8080/v1'
  - url: 'http://localhost:8080/v1'
tags:
  - name: iOT Company
    description: ''
  - name: iOT Application
    description: Crud Application
    externalDocs:
      description: application registration and maintenance
      url: ''
  - name: iOT User
    description: User registration and maintenance
  - name: iOT Device
    description: Operations about User

# security: -- ver tipo de autenticacion
security:
  - bearerAuth: []
paths:
  /companies:
    post:
      tags:
        - company
      summary: Create a new Company
      operationId: createCompany
      requestBody:
        description: Company object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
        required: true
      x-codegen-request-body-name: body
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBody'
    get:
      tags:
        - company
      summary: Get all Companies
      description: Returns all Company
      operationId: getAllCompany
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sortBy'
        - $ref: '#/components/parameters/filterColumnCompany'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyList'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Company not found
          content: {}

  '/companies/{companyId}':
    put:
      tags:
        - company
      summary: Update an existing Company
      operationId: updateCompany
      parameters:
        - $ref: '#/components/parameters/companyIdPath'
      requestBody:
        description: Comapny object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
        required: true
      x-codegen-request-body-name: body
      responses:
        '204':
          description: Successful operation
          content: {}
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: User not found
          content: {}


    delete:
      tags:
        - company
      summary: Deletes a Company
      operationId: deleteCompany
      parameters:
        - $ref: '#/components/parameters/companyIdPath'
      responses:
        '204':
          description: Successful operation
          content: {}
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: User not found
          content: {}

    get:
      tags:
        - company
      summary: Find Company by ID
      description: Returns a single Company
      operationId: getCompanyById
      parameters:
        - $ref: '#/components/parameters/companyIdPath'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyLis'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Company not found
          content: {}


  '/companies/{companyId}/applications':
    get:
      tags:
        - company
      summary: Get all Applications by ID Company
      description: Returns array Device
      operationId: getAllAppByIdCompany
      parameters:
        - $ref: '#/components/parameters/companyIdPath'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sortBy'
        - $ref: '#/components/parameters/dateTo'
        - $ref: '#/components/parameters/dateFrom'
        - $ref: '#/components/parameters/filterColumnApplication'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppList'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Device not found
          content: {}

  '/companies/{companyId}/devices':
    get:
      tags:
        - company
      summary: Get all Devices by ID Company
      description: Returns array Device
      operationId: getAllDeviceByIdCompany
      parameters:
        - $ref: '#/components/parameters/companyIdPath'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sortBy'
        - $ref: '#/components/parameters/dateTo'
        - $ref: '#/components/parameters/dateFrom'
        - $ref: '#/components/parameters/filterColumnApplication'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/applicationDeviceList3'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Device not found
          content: {}

  '/companies/{companyId}/add-applications':
    put:
      tags:
        - company
      summary: Add Aplications to Company
      operationId: addAppToCompany
      parameters:
        - $ref: '#/components/parameters/companyIdPath'
        - $ref: '#/components/parameters/applicationIdQueryR'
      responses:
        '204':
          description: Successful operation
          content: {}
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: User not found
          content: {}

  '/companies/{companyId}/remove-applications':
    delete:
      tags:
        - company
      summary: Remove Application Company
      operationId: removeAppToCompany
      parameters:
        - $ref: '#/components/parameters/companyIdPath'
        - $ref: '#/components/parameters/applicationIdQueryR'
      responses:
        '204':
          description: Successful operation
          content: {}
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: User not found
          content: {}


  /applications:


    get:
      tags:
        - application
      summary: Get all applications add optional filter
      description: Returns all application
      operationId: getAllApplication
      parameters:
        - $ref: '#/components/parameters/filterColumnApplication'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sortBy'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationList'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: application not found
          content: {}

  '/applications/{applicationId}':

    get:
      tags:
        - application
      summary: Find application by ID
      description: Returns a single application
      operationId: getApplicationById
      parameters:
        - $ref: '#/components/parameters/applicationIdPath'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: application not found
          content: {}

  '/applications/{applicationId}/devices':
    get:
      tags:
        - application
      summary: Get all devices by ID
      description: List  Device by ID application
      operationId: getAllDeviceByIdApplication
      parameters:
        - $ref: '#/components/parameters/applicationIdPath'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sortBy'

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/appDeviceList'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Device not found
          content: {}

  /supervisors:

    post:
      tags:
        - supervisor
      summary: Create a new Supervisor
      operationId: createSupervisor
      # security: []
      requestBody:
        description: User object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSuper'
        required: true
        x-codegen-request-body-name: body
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBody'
    get:
      tags:
        - supervisor
      summary: Get all Supervisor
      description: Put the supervisor user ID, to return the list of the company he manage
      operationId: getAllCompanySupervisor
      parameters:
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sortBy'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuperVisorList'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Company not found
          content: {}

  '/supervisors/{supervisorId}':
    get:
      tags:
        - supervisor
      summary: Get Supervisor by ID
      description: Put the supervisor user ID, to return the list of the company he manage
      operationId: getSupervisorById
      parameters:
        - $ref: '#/components/parameters/supervisorIdPath'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Super'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Company not found
          content: {}


    put:
      tags:
        - supervisor
      summary: Update an existing Supervisor
      description: Update and assign Company into Supervisor
      operationId: updateSupervisor
      parameters:
        - $ref: '#/components/parameters/supervisorIdPath'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
        required: true
      responses:
        '204':
          description: Successful operation
          content: {}
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: User not found
          content: {}
      x-codegen-request-body-name: body

    delete:
      tags:
        - supervisor
      summary: Delete a Supervisor by ID
        user
      operationId: deleteSupervisor
      parameters:
        - $ref: '#/components/parameters/supervisorIdPath'
      responses:
        '204':
          description: Successful operation
          content: {}
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: User not found
          content: {}

  '/supervisors/{supervisorId}/company':
    get:
      tags:
        - supervisor
      summary: List of company that having a supervisor
      description: Put the supervisor user ID, to return the list of the company he manage
      operationId: getCompanyHaveSupervisorById
      parameters:
        - $ref: '#/components/parameters/supervisorIdPath'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSuper'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Company not found
          content: {}

  '/supervisors/{supervisorId}/add-company':
    put:
      tags:
        - supervisor
      summary: Add Company to Supervisor
      description: Update and assign Company into Supervisor
      operationId: addCompanyToSupervisor
      parameters:
        - $ref: '#/components/parameters/supervisorIdPath'
        - $ref: '#/components/parameters/companyIdQueryR'
      responses:
        '204':
          description: Successful operation
          content: {}
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: User not found
          content: {}
      x-codegen-request-body-name: body

  '/supervisors/{supervisorId}/remove-company':
    delete:
      tags:
        - supervisor
      summary: Remove Company to Supervisor
        user
      operationId: removeCompanyToSupervisor
      parameters:
        - $ref: '#/components/parameters/supervisorIdPath'
        - $ref: '#/components/parameters/companyIdQueryR'
      responses:
        '204':
          description: Successful operation
          content: {}
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: User not found
          content: {}



  /users:
    post:
      tags:
        - user
      summary: Create a new User
      operationId: createUser
      # security: []
      requestBody:
        description: User object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
        required: true
        x-codegen-request-body-name: body
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBody'
    get:
      tags:
        - user
      summary: Get all Useres add optional filter
      description: Returns list for User
      operationId: getAllUser
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sortBy'
        - $ref: '#/components/parameters/dateFrom'
        - $ref: '#/components/parameters/dateTo'
        - $ref: '#/components/parameters/filterColumnUser'

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllUser'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: User not found
          content: {}

  '/users/{userId}':
    put:
      tags:
        - user
      summary: Update an existing User
      description: Update and assign Application into user
      operationId: updateUser
      parameters:
        - $ref: '#/components/parameters/userIdPath'
      requestBody:
        description: Update an existing User
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
        required: true
      responses:
        '204':
          description: Successful operation
          content: {}
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: User not found
          content: {}
      x-codegen-request-body-name: body

    delete:
      tags:
        - user
      summary: Delete a user by ID
        user
      operationId: deleteUser
      parameters:
        - $ref: '#/components/parameters/userIdPath'
      responses:
        '204':
          description: Successful operation
          content: {}
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: User not found
          content: {}

    get:
      tags:
        - user
      summary: Get User by ID
      description: Returns a single User
      operationId: getUserById
      parameters:
        - $ref: '#/components/parameters/userIdPath'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: User not found
          content: {}
  '/users/{userId}/devices':
    get:
      tags:
        - user
      summary: Get all devices by ID User
      description: Returns array Device
      operationId: getAllDeviceByIdUser
      parameters:
        - $ref: '#/components/parameters/userIdPath'
        - $ref: '#/components/parameters/deviceIdQuery'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sortBy'
        - $ref: '#/components/parameters/dateTo'
        - $ref: '#/components/parameters/dateFrom'
        - $ref: '#/components/parameters/filterColumnDevice'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/applicationDeviceList'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Device not found
          content: {}

  '/users/{userId}/update-device':
    put:
      tags:
        - user
      summary: Update data Device to User
      description: Update and assign Application into user
      operationId: updateDeviceToUser
      parameters:
        - $ref: '#/components/parameters/userIdPath'
      requestBody:
        description: Update an existing User
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
        required: true
      responses:
        '204':
          description: Successful operation
          content: {}
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: User not found
          content: {}
      x-codegen-request-body-name: body

  '/users/{userId}/add-device':
    put:
      tags:
        - user
      summary: Add Device to User
      description: Update and assign Application into user
      operationId: addDeviceToUser
      parameters:
        - $ref: '#/components/parameters/userIdPath'
      requestBody:
        description: Update an existing User
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDevice'
        required: true
      responses:
        '204':
          description: Successful operation
          content: {}
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: User not found
          content: {}
      x-codegen-request-body-name: body

  '/users/{userId}/remove-device':
    delete:
      tags:
        - user
      summary: Remove device to user
      description: Delete or unassign a device to a specific
      operationId: removeDeviceToUser
      parameters:
        - $ref: '#/components/parameters/userIdPath'
        - $ref: '#/components/parameters/deviceIdQueryR'
      responses:
        '204':
          description: successful operation
          content: {}
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Not found
          content: {}

  /passwords:
    put:
      tags:
        - password
      summary: Create and Update Password
      description: This endpoint has two functions, it creates and updates the password.
      operationId: updatePassword
      security: []
      parameters:
        - $ref: '#/components/parameters/userIdPath'
      requestBody:
        description: User object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPassword'
      responses:
        '204':
          description: Successful operation
          content: {}
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: User not found
          content: {}
      x-codegen-request-body-name: body

  '/passwords/reset':
    put:
      tags:
        - password
      summary: Set Password after registre into system
      operationId: setPassword
      security: []
      requestBody:
        description: User object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPassword'
      responses:
        '204':
          description: Successful operation
          content: {}
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: User not found
          content: {}
      x-codegen-request-body-name: body


  /dashboards:
    get:
      tags:
        - dashboard
      summary: Show dashboard information data
      description: Returns array Device
      operationId: getDashboardById
      parameters:
        - $ref: '#/components/parameters/supervisorIdQuery'
        - $ref: '#/components/parameters/adminIdQuery'
        - $ref: '#/components/parameters/userIdQuery'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                # habrá que retonar un token co la info de l usuario
                $ref: '#/components/schemas/Dashboard'
        '400':
          description: Invalid username/password supplied
          content: {}




  /sessions:
    post:
      tags:
        - session
      summary: Logs User into the system
      operationId: login
      security: [] # validate data login
      parameters:
        - $ref: '#/components/parameters/email'
        - $ref: '#/components/parameters/password'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                # habrá que retonar un token co la info de l usuario
                $ref: '#/components/schemas/LoginOk'
        '400':
          description: Invalid username/password supplied
          content: {}

  '/sessions/':
    get:
      tags:
        - session
      summary: Get session state
      operationId: statusSession
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                # habrá que retonar un token co la info de l usuario
                $ref: '#/components/schemas/StatusUser'
        '400':
          description: Invalid ID
        '404':
          description: Session not found
          content: {}

    put:
      tags:
        - session
      summary: Update State session
      operationId: updateSession
      parameters:
        - $ref: '#/components/parameters/companyIdQueryR'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                # habrá que retonar un token co la info de l usuario
                $ref: '#/components/schemas/token'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: User not found
          content: {}

    delete:
      tags:
        - session
      summary: Logout current logged in User session
      operationId: logout
      responses:
        default:
          description: successful operation
          content: {}




  /notifications:
    post:
      tags:
        - notification
      summary: Create a new Notifications for User
      operationId: createNotification
      requestBody:
        description: Notifications object that definition for user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createNotification'
        required: true

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBody'
    get:
      tags:
        - notification
      summary: Get all notification add optional filter properties
      description: Returns List a notifications
      operationId: getAllNotifications
      parameters:
        - $ref: '#/components/parameters/companyIdQuery'
        - $ref: '#/components/parameters/userIdQuery'
        - $ref: '#/components/parameters/deviceIdQuery'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sortBy'
        - $ref: '#/components/parameters/dateFrom'
        - $ref: '#/components/parameters/dateTo'
        - $ref: '#/components/parameters/filterColumnNotification'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationList'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Notifications not found
          content: {}

  '/notifications/{notificationId}':
    delete:
      tags:
        - notification
      summary: Deletes a Notifications
      operationId: deleteNotification
      parameters:
        - $ref: '#/components/parameters/notificationIdPath'
      responses:
        '204':
          description: Successful operation
          content: {}
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Notifications not found
          content: {}
    put:
      tags:
        - notification
      summary: Update an existing Notifications
      operationId: updateNotification
      parameters:
        - $ref: '#/components/parameters/notificationIdPath'
      requestBody:
        description: Notifications object that definition for user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createNotification'
        required: true
      responses:
        '204':
          description: Successful operation
          content: {}
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Notification not found
          content: {}
      x-codegen-request-body-name: body

    get:
      tags:
        - notification
      summary: Get notification by ID
      description: Returns a single notification
      operationId: getNotificationById
      parameters:
        - $ref: '#/components/parameters/notificationIdPath'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notifi'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Notification not found
          content: {}

  '/notifications/export':
    get:
      tags:
        - notification
      summary: Get notification by ID
      description: Returns a single notification
      operationId: getExportNotifications
      parameters:
        - $ref: '#/components/parameters/formatFile'
        - $ref: '#/components/parameters/notificationIdQuery'
        - $ref: '#/components/parameters/userIdQuery'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sortBy'
        - $ref: '#/components/parameters/filterColumnNotification'
        - $ref: '#/components/parameters/dateFrom'
        - $ref: '#/components/parameters/dateTo'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Notification not found
          content: {}
  /devices:
    get:
      tags:
        - device
      summary: Get all Devices add optional filter properties
      description: Returns all Device
      operationId: getAllDevice
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/filterColumnDevice'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/applicationDeviceList2'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Device not found
          content: {}

  '/devices/{deviceId}':
    get:
      tags:
        - device
      summary: Get Device by ID
      description: Returns a single Device
      operationId: getDeviceById
      parameters:
        - $ref: '#/components/parameters/deviceIdPath'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindDevice2'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Device not found
          content: {}


  '/devices/export':
    get:
      tags:
        - device
      summary: Export data
      description: Export file
      operationId: exportFileDevice
      parameters:
        - $ref: '#/components/parameters/formatFile'
        - $ref: '#/components/parameters/deviceIdQuery'
        - $ref: '#/components/parameters/userIdQuery'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sortBy'
        - $ref: '#/components/parameters/filterColumnDevice'
        - $ref: '#/components/parameters/dateFrom'
        - $ref: '#/components/parameters/dateTo'
      responses:
        '200':
          description: successful operation
          content:
            application/text/csv:
              example: id;applicationId;name;temperature,humidity

        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Device not found
          content: {}

  '/devices/{deviceId}/print-graphic':
    get:
      tags:
        - device
      summary: Print data from a date range on a graph
      description: Returns a single Device
      operationId: getDeviceByIdGraphic
      parameters:
        - $ref: '#/components/parameters/deviceIdPath'
        - $ref: '#/components/parameters/userIdQuery'
        - $ref: '#/components/parameters/dateFrom'
        - $ref: '#/components/parameters/dateTo'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrintGraphicDevice'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Device not found
          content: {}

  '/devices/{deviceId}/export-graphic':
    get:
      tags:
        - device
      summary: Export data graphic
      description: Returns a single Device
      operationId: getExportDeviceByIdGraphic
      parameters:
        - $ref: '#/components/parameters/deviceIdPath'
        - $ref: '#/components/parameters/userIdQuery'
        - $ref: '#/components/parameters/dateFrom'
        - $ref: '#/components/parameters/dateTo'
      responses:
        '200':
          description: successful operation
          content:
            application/text/csv:
              example: temperature,date;humididty,date

        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Device not found
          content: {}
  /incidences:
    get:
      tags:
        - incidence
      summary: Get all Incidence add optional filter properties
      description: Returns a single Device
      operationId: getAllIncidence
      parameters:
        - $ref: '#/components/parameters/companyIdQuery'
        - $ref: '#/components/parameters/userIdQuery'
        - $ref: '#/components/parameters/deviceIdQuery'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sortBy'
        - $ref: '#/components/parameters/dateTo'
        - $ref: '#/components/parameters/dateFrom'
        - $ref: '#/components/parameters/filterColumnIncidence'

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidenceList'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Device not found
          content: {}


  '/incidences/{incidenceId}':
    delete:
      tags:
        - incidence
      summary: Delete a Incidence
      operationId: deleteIncidence
      parameters:
        - $ref: '#/components/parameters/incidenceIdPath'
      responses:
        '204':
          description: Successful operation
          content: {}
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Device not found
          content: {}
    get:
      tags:
        - incidence
      summary: Get Incidence by ID
      description: Returns a single Device
      operationId: getIncidenceById
      parameters:
        - $ref: '#/components/parameters/incidenceIdPath'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incidence'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Device not found
          content: {}

  '/incidences/export':
    get:
      tags:
        - incidence
      summary: Export data
      description: Export file
      operationId: exportDataIncidence
      parameters:
        - $ref: '#/components/parameters/formatFile'
        - $ref: '#/components/parameters/deviceIdQuery'
        - $ref: '#/components/parameters/userIdQuery'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sortBy'
        - $ref: '#/components/parameters/filterColumnIncidence'
        - $ref: '#/components/parameters/dateFrom'
        - $ref: '#/components/parameters/dateTo'
      responses:
        '200':
          description: successful operation
          content:
            application/text/csv:
              example: id;deviceId;createdAt;name; notificationName;condition;valueConditional;currentValue
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Device not found
          content: {}
  /events:
    get:
      tags:
        - event
      summary: Get all Events add optional filter properties
      description: ''
      operationId: getAllEvents
      parameters:
        - $ref: '#/components/parameters/userIdQuery'
        - $ref: '#/components/parameters/deviceIdQuery'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sortBy'
        - $ref: '#/components/parameters/filterColumnEvent'
        - $ref: '#/components/parameters/dateFrom'
        - $ref: '#/components/parameters/dateTo'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventList'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Device not found
          content: {}

  '/events/{eventId}':
    get:
      tags:
        - event
      summary: Get Envent by ID
      description: Returns   Events By ID
      operationId: getEventById
      parameters:
        - $ref: '#/components/parameters/eventIdPath'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: ID not found
          content: {}

  '/events/export':
    get:
      tags:
        - event
      summary: Export data
      description: Export file
      operationId: exportDataEvent
      parameters:
        - $ref: '#/components/parameters/formatFile'
        - $ref: '#/components/parameters/eventIdQuery'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sortBy'
        - $ref: '#/components/parameters/filterColumnEvent'
        - $ref: '#/components/parameters/dateFrom'
        - $ref: '#/components/parameters/dateTo'
      responses:
        '200':
          description: successful operation
          content:
            application/text/csv:
              example: id;deviceId;createdAt;name; notificationName;condition;valueConditional;currentValue
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Device not found
          content: {}

components:

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  parameters:
    companyIdPath:
      in: path
      name: companyId
      required: true
      schema:
        $ref: '#/components/schemas/typeUUID'
    companyIdQuery:
      in: query
      name: companyId
      required: false
      schema:
        $ref: '#/components/schemas/typeUUID'

    companyIdQueryR:
      in: query
      name: companyId
      required: true
      schema:
        $ref: '#/components/schemas/typeUUID'

    applicationIdQuery:
      in: query
      name: applicationId
      required: false
      schema:
        $ref: '#/components/schemas/typeUUID'

    supervisorIdPath:
      in: path
      name: supervisorId
      required: true
      schema:
        $ref: '#/components/schemas/typeUUID'

    supervisorIdQuery:
      in: query
      name: supervisorId
      required: false
      schema:
        $ref: '#/components/schemas/typeUUID'

    applicationIdQueryR:
      in: query
      name: applicationId
      required: true
      schema:
        $ref: '#/components/schemas/typeUUID'

    deviceIdQueryR:
      in: query
      name: deviceId
      required: true
      schema:
        $ref: '#/components/schemas/typeUUID'

    applicationIdPath:
      in: path
      name: applicationId
      required: true
      schema:
        $ref: '#/components/schemas/typeUUID'

    userIdQuery:
      in: query
      name: userId
      required: false
      schema:
        $ref: '#/components/schemas/typeUUID'

    deviceIdQuery:
      in: query
      name: deviceId
      required: false
      schema:
        $ref: '#/components/schemas/typeUUID'

    adminIdQuery:
      in: query
      name: adminId
      required: false
      schema:
        $ref: '#/components/schemas/typeUUID'


    userIdPath:
      in: path
      name: userId
      required: true
      schema:
        $ref: '#/components/schemas/typeUUID'

    notificationIdPath:
      in: path
      name: notificationId
      required: true
      schema:
        $ref: '#/components/schemas/typeUUID'

    notificationIdQuery:
      in: query
      name: notificationId
      required: false
      schema:
        $ref: '#/components/schemas/typeUUID'

    incidenceIdQuery:
      in: query
      name: incidenceId
      required: false
      schema:
        $ref: '#/components/schemas/typeUUID'

    incidenceIdPath:
      in: path
      name: incidenceId
      required: true
      schema:
        $ref: '#/components/schemas/typeUUID'

    deviceIdPath:
      in: path
      name: deviceId
      required: true
      schema:
        $ref: '#/components/schemas/typeUUID'

    eventIdPath:
      in: path
      name: eventId
      required: true
      schema:
        $ref: '#/components/schemas/typeUUID'

    eventIdQuery:
      in: query
      name: eventId
      required: false
      schema:
        $ref: '#/components/schemas/typeUUID'

    offset:
      in: query
      name: offset
      description: value offSet to search
      required: false
      schema:
        $ref: '#/components/schemas/offset'

    limit:
      in: query
      name: limit
      description: value offSet to search
      required: false
      schema:
        $ref: '#/components/schemas/limit'

    sortBy:
      in: query
      name: sortBy
      description: ''
      required: false
      schema:
        $ref: '#/components/schemas/sortBy'


    columnName:
      in: query
      name: columnName
      description: ''
      required: false
      schema:
        $ref: '#/components/schemas/typeString'

    sessionId:
      in: path
      name: sessionId
      description: The ID for session
      required: true
      schema:
        $ref: '#/components/schemas/typeUUID'

    email:
      in: query
      name: email
      description: The user email for login
      required: true
      schema:
        $ref: '#/components/schemas/typeString'

    password:
      in: query
      name: password
      description: The password for login
      required: true
      schema:
        $ref: '#/components/schemas/typeString'

    filterColumnApplication:
      in: query
      name: filter
      description:  Add values to filter in your search
      required: false
      schema:
        $ref: '#/components/schemas/ToFilterApp'

    filterColumnCompany:
      in: query
      name: filter
      description:  Add values to filter in your search
      required: false
      schema:
        $ref: '#/components/schemas/ToFilterCompany'

    filterColumnDevice:
      in: query
      name: filter
      description:  Add values to filter in your search
      required: false
      schema:
        $ref: '#/components/schemas/ToFilterDevice'

    filterColumnUser:
      in: query
      name: filter
      description:  Add values to filter in your search
      required: false
      schema:
        $ref: '#/components/schemas/ToFilterUser'

    filterColumnNotification:
      in: query
      name: filter
      description:  Add values to filter in your search
      required: false
      schema:
        $ref: '#/components/schemas/ToFilterNotification'

    filterColumnEvent:
      in: query
      name: filter
      description:  Add values to filter in your search
      required: false
      schema:
        $ref: '#/components/schemas/ToFilterEvent'

    filterColumnIncidence:
      in: query
      name: filter
      description:  Add values to filter in your search
      required: false
      schema:
        $ref: '#/components/schemas/ToFilterIncidence'

    filterValue:
      in: query
      name: value
      description:  Add text to filter in your search
      required: false
      schema:
        type: array
        additionalProperties: true
        items:
          $ref: '#/components/schemas/typeString'

    formatFile:
      in: query
      name: formatFile
      description: 'Download file data'
      required: true
      schema:
        $ref: '#/components/schemas/formatFile'

    token:
      in: query
      name: token
      description: 'Token'
      required: true
      schema:
        $ref: '#/components/schemas/typeString'

    dateFrom:
      in: query
      name: dateFrom
      description: Begin date to filter
      required: false
      schema:
        $ref: '#/components/schemas/typeDate'

    dateTo:
      in: query
      name: dateTo
      description: Final date to filter filter
      required: false
      schema:
        $ref: '#/components/schemas/typeDate'

  schemas:
    # -- ID entities
    typeUUID:
      type: string
      format: uuid


    typeBool:
      type: boolean
      default: true

    typeString:
      type: string

    typeDateTime:
      type: string
      format: date-time

    typeDate:
      type: string
      format: date

    typeInt:
      type: integer
      format: int64
      default: 0

    typeNumber:
      type: number
      example: 26.3

    # -- type data special

    condition:
      type: string
      enum:
        - ">"
        - "<"
        - "="
        - ">="
        - "<="
      default: ">="


    # -- data filter
    offset:
      type: integer
      format: int64
      default: 0

    limit:
      type: integer
      format: int64
      default: 50

    sortBy:
      type: string
      enum:
        - ASC
        - DESC
      default: ASC
    formatFile:
      type: string
      enum:
        - CSV
      default: CSV


      ## -- create Objects
    ToFilterIncidence:
      type: object
      additionalProperties: false
      properties:

        name:
          $ref: '#/components/schemas/typeString'
        notificationName:
          $ref: '#/components/schemas/typeString'
        createdAt:
          $ref: '#/components/schemas/typeDate'
        condition:
          $ref: '#/components/schemas/condition'
        value:
          $ref: '#/components/schemas/typeNumber'
        currentValue:
          $ref: '#/components/schemas/typeNumber'
    ToFilterDevice:
      type: object
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/typeString'
        serial:
          $ref: '#/components/schemas/typeString'
        applicationName:
          $ref: '#/components/schemas/typeString'
        battery:
          $ref: '#/components/schemas/typeInt'
        temperature:
          $ref: '#/components/schemas/typeString'
        humidity:
          $ref: '#/components/schemas/typeString'
    ToFilterUser:
      type: object
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/typeString'
        surnames:
          $ref: '#/components/schemas/typeString'
        email:
          $ref: '#/components/schemas/typeString'
        deviceTotal:
          $ref: '#/components/schemas/typeInt'
    ToFilterApp:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/typeUUID'
        name:
          $ref: '#/components/schemas/typeString'
    ToFilterEvent:
      type: object
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/typeString'
        notificationName:
          $ref: '#/components/schemas/typeString'
        condition:
          $ref: '#/components/schemas/condition'
        currentValue:
          $ref: '#/components/schemas/typeNumber'
        valueConditional:
          $ref: '#/components/schemas/typeNumber'
    ToFilterNotification:
      type: object
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/typeString'
        deviceName:
          $ref: '#/components/schemas/typeString'
        condition:
          $ref: '#/components/schemas/condition'
        valueConditional:
          $ref: '#/components/schemas/typeNumber'
        addressee:
          $ref: '#/components/schemas/typeString'

    ToFilterCompany:
      type: object
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/typeString'
        email:
          $ref: '#/components/schemas/typeString'

    Dashboard:
      type: object
      required:
        - totalIncidence
        - totalDevice
        - device
        - event
      additionalProperties: false
      properties:
        totalIncidence:
          $ref: '#/components/schemas/typeInt'
        totalApplication:
          $ref: '#/components/schemas/typeInt'
        totalDevice:
          $ref: '#/components/schemas/typeInt'
        device:
          $ref: '#/components/schemas/DeviceModelList'
        event:
          $ref: '#/components/schemas/EventModelList'

    EventModelList:
      type: object
      required:
        - items
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/typeString'

    DeviceModelList:
      type: object
      required:
        - items
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/DeviceModel'

    DeviceModel:
      type: object
      required:
        - deviceName
        - applicationName
        - battery

      additionalProperties: false
      properties:
        deviceName:
          $ref: '#/components/schemas/typeString'
        applicationName:
          $ref: '#/components/schemas/typeString'
        battery:
          $ref: '#/components/schemas/typeInt'
    Application:
      required:
        - id
        - name
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/typeUUID'
        name:
          $ref: '#/components/schemas/typeString'

    App:
      required:
        - id
        - name
        - createdAt
        - updatedAt
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/typeUUID'
        createdAt:
          $ref: '#/components/schemas/typeDateTime'
        updatedAt:
          $ref: '#/components/schemas/typeDateTime'
        name:
          $ref: '#/components/schemas/typeString'

    AppList:
      type: object
      required:
        - size
        - items
      additionalProperties: false
      properties:
        size:
          $ref: '#/components/schemas/typeInt'
        items:
          type: array
          items:
            $ref: '#/components/schemas/App'
    ApplicationList:
      type: object
      additionalProperties: false
      properties:
        size:
          $ref: '#/components/schemas/typeInt'
        items:
          type: array
          additionalProperties: true
          items:
            $ref: '#/components/schemas/Application'
    Company:
      required:
        - name
      type: object
      properties:
        name:
          $ref: '#/components/schemas/typeString'


    CreateSuper:
      required:
        - email
        - name
        - surnames
      type: object
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/typeString'
        surnames:
          $ref: '#/components/schemas/typeString'
        email:
          $ref: '#/components/schemas/typeString'

    Super:
      required:
        - id
        - email
        - name
        - surnames
        - totalComapny
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/typeUUID'
        name:
          $ref: '#/components/schemas/typeString'
        surnames:
          $ref: '#/components/schemas/typeString'
        email:
          $ref: '#/components/schemas/typeString'
        totalCompany:
          $ref: '#/components/schemas/typeInt'

    SuperVisorList:
      required:
        - size
        - items
      type: object
      additionalProperties: false
      properties:
        size:
          $ref: '#/components/schemas/typeInt'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Super'

    ListSuper:
      required:
        - size
        - items
      type: object
      additionalProperties: false
      properties:
        size:
          $ref: '#/components/schemas/typeInt'
        items:
          type: array
          items:
            $ref: '#/components/schemas/SuperCompanyLis'

    SuperCompanyLis:
      required:
        - companyId
        - adminId
        - supervisorId
        - totalApplication
        - totalDevice
        - companyName
      type: object
      properties:
        companyId:
          $ref: '#/components/schemas/typeUUID'
        supervisorId:
          $ref: '#/components/schemas/typeUUID'
        adminId:
          $ref: '#/components/schemas/typeUUID'
        totalApplication:
          $ref: '#/components/schemas/typeInt'
        totalDevice:
          $ref: '#/components/schemas/typeInt'
        companyName:
          $ref: '#/components/schemas/typeString'

    CompanyLis:
      required:
        - companyId
        - supervisorId
        - adminId
        - totalApplication
        - name
      type: object
      properties:
        companyId:
          $ref: '#/components/schemas/typeUUID'
        supervisorId:
          $ref: '#/components/schemas/typeUUID'
        adminId:
          $ref: '#/components/schemas/typeUUID'
        totalApplication:
          $ref: '#/components/schemas/typeInt'
        name:
          $ref: '#/components/schemas/typeString'


    CompanyList:
      type: object
      properties:
        size:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/CompanyLis'
    CreateUser:
      required:
        - email
        - name
        - surnames
      type: object
      additionalProperties: false
      properties:
        companyId:
          $ref: '#/components/schemas/typeUUID'
        name:
          $ref: '#/components/schemas/typeString'
        surnames:
          $ref: '#/components/schemas/typeString'
        email:
          $ref: '#/components/schemas/typeString'
    User:
      required:
        - name
        - email
        - createdAt
        - lastSee
        - id
        - totalDevice
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/typeUUID'
        createdAt:
          $ref: '#/components/schemas/typeDateTime'
        lastSee:
          $ref: '#/components/schemas/typeDateTime'
        name:
          $ref: '#/components/schemas/typeString'
        email:
          $ref: '#/components/schemas/typeString'
        totalDevice:
          $ref: '#/components/schemas/typeInt'

    ResponseBody:
      required:
        - id
        - createdAt
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/typeUUID'
        createdAt:
          $ref: '#/components/schemas/typeString'
    UserList:
      required:
        - id
        - lastSeen
        - email
        - name
        - surname
        - createdAt
        - role
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/typeUUID'
        createdAt:
          $ref: '#/components/schemas/typeDateTime'
        lastSeen:
          $ref: '#/components/schemas/typeDateTime'
        name:
          $ref: '#/components/schemas/typeString'
        surname:
          $ref: '#/components/schemas/typeString'
        email:
          $ref: '#/components/schemas/typeString'
        role:
          $ref: '#/components/schemas/typeString'


    UpdateUser:
      required:
        - name
        - surnames
        - email
        - appplication
      type: object
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/typeString'
        surnames:
          $ref: '#/components/schemas/typeString'
        email:
          $ref: '#/components/schemas/typeString'

    AllUser:
      type: object
      required:
        - items
        - size
      additionalProperties: false
      properties:
        size:
          $ref: '#/components/schemas/typeInt'
        items:
          type: array
          items:
            $ref: '#/components/schemas/User'

    LoginOk:
      required:
        - token
      type: object
      additionalProperties: false
      properties:
        token:
          $ref: '#/components/schemas/typeString'
    SetPassword:
      type: object
      required:
        - email
      additionalProperties: false
      properties:
        email:
          $ref: '#/components/schemas/typeString'

    ForgotPassword:
      type: object
      additionalProperties: false
      properties:
        newPassword:
          $ref: '#/components/schemas/typeString'
      oneOf:
        - $ref: '#/components/schemas/token'
        - $ref: '#/components/schemas/oldPassword'

    token:
      type: object
      required:
        - token
      additionalProperties: false
      properties:
        token:
          $ref: '#/components/schemas/typeString'

    oldPassword:
      type: object
      required:
        - oldPassword
      additionalProperties: false
      properties:
        oldPassword:
          $ref: '#/components/schemas/typeString'
    StatusUser:
      type: object
      additionalProperties: false
      required:
        - token
        - status
      properties:
        token:
          $ref: '#/components/schemas/typeString'
        status:
          $ref: '#/components/schemas/typeBool'

    Device:
      required:
        - name
      type: object
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/typeString'

    CompanyDeviceList:
      required:
        - size
        - items
      type: object
      additionalProperties: false
      properties:
        size:
          $ref: '#/components/schemas/typeInt'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Device'


    CreateDevice:
      required:
        - id
        - applicationId
        - name
        - serial
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/typeUUID'
        applicationId:
          $ref: '#/components/schemas/typeUUID'
        name:
          $ref: '#/components/schemas/typeString'
        serial:
          $ref: '#/components/schemas/typeString'
    FindDevice:
      required:
        - userId
        - applicationId
        - deviceId
        - applicationName
        - name
        - Serial
        - humidity
        - temperature
        - battery

      type: object
      additionalProperties: false
      properties:
        deviceId:
          $ref: '#/components/schemas/typeUUID'
        applicationId:
          $ref: '#/components/schemas/typeUUID'
        userId:
          $ref: '#/components/schemas/typeUUID'
        applicationName:
          $ref: '#/components/schemas/typeString'
        name:
          $ref: '#/components/schemas/typeString'
        Serial:
          $ref: '#/components/schemas/typeString'
        temperature:
          $ref: '#/components/schemas/typeNumber'
        humidity:
          $ref: '#/components/schemas/typeNumber'
        battery:
          $ref: '#/components/schemas/typeInt'


    FindDevice2:
      required:
        - name
        - id
        - serial
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/typeUUID'
        applicationId:
          $ref: '#/components/schemas/typeUUID'
        applicationName:
          $ref: '#/components/schemas/typeString'
        serial:
          $ref: '#/components/schemas/typeString'

    FindDevice3:
      required:
        - applicationId
        - id
        - applicationName
        - name
        - serial
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/typeUUID'
        applicationId:
          $ref: '#/components/schemas/typeUUID'
        applicationName:
          $ref: '#/components/schemas/typeString'
        name:
          $ref: '#/components/schemas/typeString'
        serial:
          $ref: '#/components/schemas/typeString'

    PrintGraphicDevice:
      required:
        - size
        - items
      type: object
      additionalProperties: false
      properties:
        size:
          $ref: '#/components/schemas/typeInt'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Graphic'

    Graphic:
      required:
        - temperature
        - humidity
        - receivedAt
      type: object
      additionalProperties: false
      properties:
        temperature:
          $ref: '#/components/schemas/typeNumber'
        humidity:
          $ref: '#/components/schemas/typeNumber'
        receivedAt:
          $ref: '#/components/schemas/typeDateTime'

    applicationDeviceList2:
      type: object
      required:
        - items
        - size
      additionalProperties: false
      properties:
        size:
          $ref: '#/components/schemas/typeInt'
        items:
          type: array
          items:
            $ref: '#/components/schemas/FindDevice2'

    applicationDeviceList3:
      type: object
      required:
        - items
        - size
      additionalProperties: false
      properties:
        size:
          $ref: '#/components/schemas/typeInt'
        items:
          type: array
          items:
            $ref: '#/components/schemas/FindDevice3'

    applicationDeviceList:
      type: object
      required:
        - items
        - size
      additionalProperties: false
      properties:
        size:
          $ref: '#/components/schemas/typeInt'
        items:
          type: array
          items:
            $ref: '#/components/schemas/FindDevice'

    appDeviceList:
      type: object
      required:
        - items
        - size
      additionalProperties: false
      properties:
        size:
          $ref: '#/components/schemas/typeInt'
        items:
          type: array
          items:
            $ref: '#/components/schemas/CreateDevice'

    createNotification:
      required:
        - deviceId
        - userId
        - notificationName
        - type
        - ValueConditional
        - condition
        - sendMode
        - addressee
        - subject
        - body

      type: object
      additionalProperties: false
      properties:
        deviceId:
          $ref: '#/components/schemas/typeUUID'
        userId:
          $ref: '#/components/schemas/typeUUID'
        notificationName:
          $ref: '#/components/schemas/typeString'
        type:
          $ref: '#/components/schemas/typeString'
        condition:
          $ref: '#/components/schemas/condition'
        ValueConditional:
          $ref: '#/components/schemas/typeNumber'
        sendMode:
          $ref: '#/components/schemas/typeString'
        addressee:
          $ref: '#/components/schemas/typeString'
        subject:
          $ref: '#/components/schemas/typeString'
        body:
          $ref: '#/components/schemas/typeString'

    Notification:
      required:
        - notificationId
        - deviceId
        - notificationName
        - deviceName
        - type
        - ValueConditional
        - condition
        - sendMode
        - addressee
        - subject
        - body
      type: object
      additionalProperties: false
      properties:
        notificationId:
          $ref: '#/components/schemas/typeUUID'
        deviceId:
          $ref: '#/components/schemas/typeUUID'
        notificationName:
          $ref: '#/components/schemas/typeString'
        deviceName:
          $ref: '#/components/schemas/typeString'
        type:
          $ref: '#/components/schemas/typeString'
        condition:
          $ref: '#/components/schemas/condition'
        ValueConditional:
          $ref: '#/components/schemas/typeNumber'
        sendMode:
          $ref: '#/components/schemas/typeString'
        addressee:
          $ref: '#/components/schemas/typeString'
        subject:
          $ref: '#/components/schemas/typeString'
        body:
          $ref: '#/components/schemas/typeString'


    Notifi:
      required:
        - notificationId
        - deviceId
        - type
        - deviceName
        - ValueConditional
        - condition
        - addressee
      type: object
      additionalProperties: false
      properties:
        notificationId:
          $ref: '#/components/schemas/typeUUID'
        deviceId:
          $ref: '#/components/schemas/typeUUID'
        type:
          $ref: '#/components/schemas/typeString'
        deviceName:
          $ref: '#/components/schemas/typeString'
        condition:
          $ref: '#/components/schemas/condition'
        ValueConditional:
          $ref: '#/components/schemas/typeNumber'
        addressee:
          $ref: '#/components/schemas/typeString'


    NotificationList:
      required:
        - items
        - size
      type: object
      additionalProperties: false
      properties:
        size:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/Notifi'
    Event:
      type: object
      additionalProperties: false
      required:
        - enventId
        - deviceId
        - deviceName
        - notificationName
        - createddAt
        - condition
        - valuerConditional
        - currentValue
      properties:
        enventId:
          $ref: '#/components/schemas/typeUUID'
        deviceId:
          $ref: '#/components/schemas/typeUUID'
        createddAt:
          $ref: '#/components/schemas/typeDateTime'
        deviceName:
          $ref: '#/components/schemas/typeString'
        notificationName:
          $ref: '#/components/schemas/typeString'
        condition:
          $ref: '#/components/schemas/condition'
        valuerConditional:
          $ref: '#/components/schemas/typeNumber'
        currentValue:
          $ref: '#/components/schemas/typeNumber'

    Incidence:
      type: object
      additionalProperties: false
      required:
        - id
        - createdAt
        - condition
        - valueConditional
        - currentValue
        - deviceName
        - name
        - current # status

      properties:
        id:
          $ref: '#/components/schemas/typeUUID'
        createdAt:
          $ref: '#/components/schemas/typeDateTime'
        name:
          $ref: '#/components/schemas/typeString'
        deviceName:
          $ref: '#/components/schemas/typeString'
        condition:
          $ref: '#/components/schemas/condition'
        valueConditional:
          $ref: '#/components/schemas/typeNumber'
        currentValue:
          $ref: '#/components/schemas/typeNumber'
        current:
          $ref: '#/components/schemas/typeBool'

    IncidenceList:
      type: object
      required:
        - items
        - size
      additionalProperties: false
      properties:
        size:
          $ref: '#/components/schemas/typeInt'
        items:
          type: array
          additionalProperties: false
          items:
            $ref: '#/components/schemas/Incidence'

    EventList:
      type: object
      required:
        - items
        - size
      additionalProperties: false
      properties:
        size:
          $ref: '#/components/schemas/typeInt'
        items:
          $ref: '#/components/schemas/Event'


